.. _bug_triaging:

فرز الأخطاء وإدارة المشكلات
===============================

تعد `تتبع المشكلات <https://github.com/scikit-learn/scikit-learn/issues>`_
مهمة للتواصل في المشروع: فهي تساعد
المطورين على تحديد المشاريع الرئيسية للعمل عليها، بالإضافة إلى مناقشة
الأولويات. ولهذا السبب، من المهم تنظيمها، وإضافة العلامات
إلى المشكلات وإغلاق المشكلات التي ليست ضرورية.

العمل على المشكلات لتحسينها
---------------------------------

يزيد تحسين المشكلات من فرص حلها بنجاح.
يمكن العثور على إرشادات حول تقديم المشكلات الجيدة هنا :ref:`هنا
<filing_bugs>`.
يمكن لطرف ثالث تقديم تعليقات مفيدة أو حتى
إضافة تعليقات على المشكلة.
فيما يلي الإجراءات النموذجية المفيدة:

- توثيق المشكلات التي تفتقد إلى العناصر اللازمة لإعادة إنتاج المشكلة
  مثل عينات التعليمات البرمجية

- اقتراح استخدام أفضل لتنسيق التعليمات البرمجية

- اقتراح إعادة صياغة العنوان والوصف لجعلهما أكثر
  وضوحًا حول المشكلة التي يتعين حلها

- ربط المشكلات أو المناقشات ذات الصلة مع وصف موجز لكيفية
  ارتباطها، على سبيل المثال "راجع أيضًا #xyz لمحاولة مماثلة
  في هذا" أو "راجع أيضًا #xyz حيث حدث نفس الشيء في
  SomeEstimator" يوفر السياق ويساعد في المناقشة.

.. topic:: مناقشات مثمرة

   قد تكون المناقشات عبر الإنترنت أكثر صعوبة مما تبدو للوهلة الأولى، خاصة
   بالنظر إلى أن شخصًا جديدًا في المصادر المفتوحة قد يكون لديه فهم مختلف جدًا
   للعملية عن الشخص المحنك.

   بشكل عام، من المفيد أن تظل إيجابيًا وتفترض النوايا الحسنة. `تستكشف المقالة
   التالية <https://gael-varoquaux.info/programming/technical-discussions-are-hard-a-few-tips.html>`_
   كيفية قيادة المناقشات عبر الإنترنت في سياق المصادر المفتوحة.

العمل على طلبات السحب للمساعدة في المراجعة
-----------------------------

يتم أيضًا تشجيع مراجعة التعليمات البرمجية. يُرحب بالمساهمين والمستخدمين للمشاركة
في عملية المراجعة باتباع إرشادات المراجعة الخاصة بنا :ref:`<code_review>`.

عمليات الفرز لأعضاء فريق النواة وفريق خبرة المساهمين
----------------------------------------------------------------------------

بالإضافة إلى ما سبق، يمكن لأعضاء فريق النواة وفريق خبرة المساهمين
القيام بالمهام المهمة التالية:

- تحديث :ref:`علامات للمشكلات وطلبات السحب <issue_tracker_tags>`: راجع قائمة
  `علامات جيثب المتاحة
  <https://github.com/scikit-learn/scikit-learn/labels>`_.

- :ref:`تحديد ما إذا كان يجب إعادة تسمية طلب السحب على أنه متوقف <stalled_pull_request>`
  أو يحتاج إلى مساعدة (هذا مهم جدًا في سياق
  الرشقات، حيث يكمن الخطر في إنشاء العديد من طلبات السحب غير المكتملة)

- إذا تم الاستيلاء على طلب السحب المتوقف بواسطة طلب سحب أحدث، فقم بتسمية طلب السحب المتوقف باسم
  "متجاوز"، واترك تعليقًا على طلب السحب المتوقف مع رابط إلى طلب السحب الجديد، ومن
  المحتمل إغلاق طلب السحب المتوقف.

- فرز المشكلات:

  - **إغلاق أسئلة الاستخدام** وأشر بلطف إلى المبلغ لاستخدام
    Stack Overflow بدلاً من ذلك.

  - **إغلاق المشكلات المكررة**، بعد التحقق من أنها
    في الواقع مكررة. في الوضع المثالي، ينقل مقدم الطلب الأصلي
    المناقشة إلى المشكلة الأقدم المكررة

  - **إغلاق المشكلات التي لا يمكن إعادة إنتاجها**، بعد ترك الوقت (على
    الأقل أسبوع) لإضافة معلومات إضافية

:ref:`الردود المحفوظة <saved_replies>` مفيدة لتوفير الوقت ومع ذلك تكون
مرحبة ومهذبة عند الفرز.

راجع وصف جيثب لأدوار في المنظمة
<https://docs.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization>`_.

.. topic:: إغلاق المشكلات: قرار صعب

    عندما يكون هناك شك في ما إذا كان يجب إغلاق المشكلة أم لا، فمن الأفضل
    السعي إلى تحقيق الإجماع مع الشخص الذي نشرها في الأصل، وربما
    طلب الخبرة ذات الصلة. ومع ذلك، عندما تكون المشكلة سؤالًا عن الاستخدام، أو عندما
    يتم اعتبارها غير واضحة لسنوات عديدة، فيجب إغلاقها.

سير عمل نموذجي لفرز المشكلات
--------------------------------------

سير العمل التالي [1]_ هو طريقة جيدة لفرز المشكلات:

#. شكر المبلغ عن فتح مشكلة

   يعد تعقب المشكلات أول تفاعل للعديد من الأشخاص مع
   مشروع scikit-learn نفسه، إلى جانب استخدام المكتبة فقط. لذلك،
   نريد أن تكون تجربة ممتعة ومرحبة.

#. هل هذا سؤال عن الاستخدام؟ إذا كان الأمر كذلك، فأغلقه برسالة مهذبة
   (:ref:`هنا مثال <saved_replies>`).

#. هل تم توفير المعلومات اللازمة؟

   إذا كانت المعلومات الحاسمة (مثل إصدار scikit-learn المستخدم)
   مفقودة، فلا تتردد في طلب ذلك ووضع علامة على المشكلة باسم "تحتاج
   إلى معلومات".

#. هل هذه مشكلة مكررة؟

   لدينا العديد من المشكلات المفتوحة. إذا بدت مشكلة جديدة مكررة،
   فأشر إلى المشكلة الأصلية. إذا كانت مكررة بشكل واضح، أو كان هناك إجماع
   على أنها زائدة عن الحاجة، فأغلقها. تأكد من شكر المبلغ
   على أي حال، وشجعهم على المشاركة في المناقشة الأصلية، وربما حاول إصلاحها.

   إذا قدمت المشكلة الجديدة معلومات ذات صلة، مثل مثال أفضل أو
   مختلف قليلاً، فأضفه إلى المشكلة الأصلية كتعليق أو تعديل على المشاركة الأصلية.

#. تأكد من أن العنوان يعكس المشكلة بدقة. إذا كان لديك
   الأذونات اللازمة فقم بتحريرها بنفسك إذا لم يكن الأمر واضحًا.

#. هل المشكلة بسيطة ويمكن إعادة إنتاجها؟

   بالنسبة لتقارير الأخطاء، نطلب من المبلغ توفير مثال يمكن إعادة إنتاجه. راجع `هذه المشاركة المفيدة
   <https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports>`_
   بواسطة ماثيو روكلين للحصول على تفسير جيد. إذا لم يكن المثال قابلاً لإعادة الإنتاج، أو
   إذا لم يكن بسيطًا بشكل واضح، فلا تتردد في طلب ما إذا كان بإمكان المبلغ توفير مثال أو تبسيط المثال المقدم.
   اعترف بأن كتابة أمثلة يمكن إعادة إنتاجها أمر شاق. إذا كان المبلغ يواجه صعوبة، فيمكنك محاولة كتابة مثال بنفسك.

   إذا تم توفير مثال يمكن إعادة إنتاجه، ولكنك ترى تبسيطًا،
   أضف مثالك البسيط الذي يمكن إعادة إنتاجه.

#. أضف العلامات ذات الصلة، مثل "الوثائق" عندما تكون
   المشكلة متعلقة بالوثائق، "خطأ" إذا كان من الواضح أنه خطأ، "تحسين" إذا كان
   طلب تحسين، ...

   إذا كانت المشكلة محددة بوضوح ويبدو الإصلاح بسيطًا نسبيًا، فقم بوضع علامة على المشكلة باسم "Good first issue".

   يمكن أن تكون الخطوة الإضافية المفيدة هي وضع علامة على الوحدة النمطية المقابلة، على سبيل المثال
   `sklearn.linear_models` عند الاقتضاء.

#. أزل علامة "تحتاج إلى فرز" من المشكلة إذا كانت العلامة موجودة.

.. [1] تم التكييف من دليل مسؤولي مشروع الباندا `
       <https://pandas.pydata.org/docs/development/maintaining.html>`_
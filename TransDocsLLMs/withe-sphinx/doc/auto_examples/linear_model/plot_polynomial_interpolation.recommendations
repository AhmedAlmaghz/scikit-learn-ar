

.. rubric:: Related examples

.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example compares two different bayesian regressors:">

.. only:: html

  .. image:: /auto_examples/linear_model/images/thumb/sphx_glr_plot_ard_thumb.png
    :alt:

  :ref:`sphx_glr_auto_examples_linear_model_plot_ard.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Comparing Linear Bayesian Regressors</div>
    </div>


.. only:: not html

 * :ref:`sphx_glr_auto_examples_linear_model_plot_ard.py`

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This notebook introduces different strategies to leverage time-related features for a bike sharing demand regression task that is highly dependent on business cycles (days, weeks, months) and yearly season cycles.">

.. only:: html

  .. image:: /auto_examples/applications/images/thumb/sphx_glr_plot_cyclical_feature_engineering_thumb.png
    :alt:

  :ref:`sphx_glr_auto_examples_applications_plot_cyclical_feature_engineering.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Time-related feature engineering</div>
    </div>


.. only:: not html

 * :ref:`sphx_glr_auto_examples_applications_plot_cyclical_feature_engineering.py`

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstrates the problems of underfitting and overfitting and how we can use linear regression with polynomial features to approximate nonlinear functions. The plot shows the function that we want to approximate, which is a part of the cosine function. In addition, the samples from the real function and the approximations of different models are displayed. The models have polynomial features of different degrees. We can see that a linear function (polynomial with degree 1) is not sufficient to fit the training samples. This is called underfitting. A polynomial of degree 4 approximates the true function almost perfectly. However, for higher degrees the model will overfit the training data, i.e. it learns the noise of the training data. We evaluate quantitatively overfitting / underfitting by using cross-validation. We calculate the mean squared error (MSE) on the validation set, the higher, the less likely the model generalizes correctly from the training data.">

.. only:: html

  .. image:: /auto_examples/model_selection/images/thumb/sphx_glr_plot_underfitting_overfitting_thumb.png
    :alt:

  :ref:`sphx_glr_auto_examples_model_selection_plot_underfitting_overfitting.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Underfitting vs. Overfitting</div>
    </div>


.. only:: not html

 * :ref:`sphx_glr_auto_examples_model_selection_plot_underfitting_overfitting.py`

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="We are very pleased to announce the release of scikit-learn 1.0! The library has been stable for quite some time, releasing version 1.0 is recognizing that and signalling it to our users. This release does not include any breaking changes apart from the usual two-release deprecation cycle. For the future, we do our best to keep this pattern.">

.. only:: html

  .. image:: /auto_examples/release_highlights/images/thumb/sphx_glr_plot_release_highlights_1_0_0_thumb.png
    :alt:

  :ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_1_0_0.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Release Highlights for scikit-learn 1.0</div>
    </div>


.. only:: not html

 * :ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_1_0_0.py`

.. thumbnail-parent-div-close

.. raw:: html

    </div>

